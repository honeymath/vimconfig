
" Vundle Settings

set nocompatible              " be iMproved, required
filetype off                  " required
syntax on

:cd C:\Tom Huh\Repositories
:e readme.md



:nnoremap <M-x> :execute "!start cmd.exe /K cd /d \"" . expand('%:p:h') . "\""<CR>
"au BufWritePost * silent !(git add %:p)
"autocmd BufWritePost * execute 'silent !git add "' . expand('%') . '"'

autocmd BufWritePost * call system('cd /d "' . expand('%:p:h') . '" && git add "' . expand('%:t') . '"')

"autocmd BufWritePost * call system('git add "' . expand('%:p') . '"')



set jumpoptions+=stack
autocmd BufEnter "C:\Tom Huh\Repositories\readme.md" clearjumps
:nnoremap \ :call EnterPath()<CR>
function! EnterPath()
  let l:line = getline('.')
  if l:line =~ '\[\zs.*\ze\](\zs[^)]\+\ze)'  " Markdown style
    let l:path = matchstr(l:line, '\[\zs.*\ze\](\zs[^)]\+\ze)')
  elseif l:line =~ '\\input{\zs[^}]\+\ze}'  " LaTeX \input style
    let l:path = matchstr(l:line, '\\input{\zs[^}]\+\ze}')
    let l:path = substitute(l:path, '\.tex$', '', '')  " Remove .tex if it exists
    let l:path = l:path . '.tex'  " Always add .tex explicitly
  else
    echo "No matching path found"
    return
  endif
  let l:dir = fnamemodify(l:path, ':h')
  if !isdirectory(l:dir)
    call mkdir(l:dir, 'p')
    echo "Created: " . l:dir
  else
    echo "Directory already exists"
  endif
  execute 'edit' fnameescape(expand('%:p:h') . '/' .l:path)
endfunction



function! SmartCtrlO()
  " Get the current position in the jumplist
  " first, let try to jump for one step.
  execute "normal! \<C-o>" 
  let [jumplist, idx] = getjumplist()
  let save_cursor = getpos('.')
  while idx > 0
    let prev = jumplist[idx - 1]
    " prev is a list: [bufnr, lnum, col, text]
    let bufnr = prev['bufnr']
    if bufnr != bufnr('%')  " It's a jump to another file
      break
    endif
    " jump to the previous entry
    execute "normal! \<C-o>"
    let [jumplist, idx] = getjumplist()
  endwhile
  call setpos('.', save_cursor)  
endfunction
:map <M-\> :call SmartCtrlO()<CR>
":map <M-\> :source C:\Tom Huh\Repositories\vimconfig\escape.vim<CR>
":map \ :source C:\Tom Huh\Repositories\vimconfig\main.vim<CR>
function! BuildAndOpenPDF()
    " Start from current file's directory
    let l:dir = expand('%:p:h')

    " Loop upward until we find main.tex or reach root
    while 1
        if filereadable(l:dir . '\.(main.tex')
            break
        endif
        let l:parent = fnamemodify(l:dir, ':h')
        if l:parent == l:dir
            echo "main.tex not found!"
            return
        endif
        let l:dir = l:parent
    endwhile

    " Run pdflatex
    let l:texfile = l:dir . '\main.tex'
    echo "Running pdflatex on " . l:texfile
    execute 'silent !pdflatex -interaction=nonstopmode ' . shellescape(l:texfile)

    " Open main.pdf (Windows version using start)
    let l:pdffile = l:dir . '\main.pdf'
    if filereadable(l:pdffile)
        echo "Opening " . l:pdffile
        execute 'silent !start "" ' . shellescape(l:pdffile)
    else
        echo "main.pdf not found!"
    endif
endfunction

" Map Alt-Z to the function
nnoremap <silent> <M-z> :call BuildAndOpenPDF()<CR>

"source vimconfig\enter_windows.vim




